from datetime import datetime

from aiogram import Router, types
from aiogram.filters import Command

from config import SECRET_CODE, ADMIN_USER_ID
from db import get_user_role, set_user_role, REVIEWER_ROLE, STUDENT_ROLE, get_recent_checks

from logger import logger
from services.formatting import send_long_message

router = Router()


def get_available_commands(role: str) -> list[str]:
    commands = [
        "/types ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "/rules <—Ç–∏–ø_–¥–æ–∫—É–º–µ–Ω—Ç–∞> ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞",
        "/check_docx <—Ç–∏–ø_–¥–æ–∫—É–º–µ–Ω—Ç–∞> ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å .docx –¥–æ–∫—É–º–µ–Ω—Ç",
        "/check_latex <—Ç–∏–ø_–¥–æ–∫—É–º–µ–Ω—Ç–∞> ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å .tex –∏ .sty —Ñ–∞–π–ª—ã",
        "/my_role ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ä–æ–ª—å",
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥",
        "/info ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ",
        "/feedback <—Å–æ–æ–±—â–µ–Ω–∏–µ> ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤",
    ]

    if role == STUDENT_ROLE:
        commands.append("/set_reviewer <—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–æ–¥> ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞")

    if role == REVIEWER_ROLE:
        commands.append("/change_rule <—Ç–∏–ø> <–∫–ª—é—á> <–∑–Ω–∞—á–µ–Ω–∏–µ> ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ")
        commands.append("/change_rule_for_all <–∫–ª—é—á> <–∑–Ω–∞—á–µ–Ω–∏–µ> ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤")
        commands.append("/recent_checks ‚Äî —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 14 –¥–Ω–µ–π")
        commands.append("/reset_role ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å –¥–æ student")

    return commands


@router.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id
    role = get_user_role(user_id, message.from_user.username)
    logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª —Å–µ—Å—Å–∏—é –∫–∞–∫ {role}.")

    commands = get_available_commands(role)

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç! –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å: {role}.\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
        "\n".join(commands) +
        "\n\nLaTeX-—à–∞–±–ª–æ–Ω —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –ò–ì–£: https://github.com/Alyona1619/LaTeXTemplate \n"
        "–í–∏–¥–µ–æ-–≥–∞–π–¥ –ø–æ —Ä–∞–±–æ—Ç–µ —Å —à–∞–±–ª–æ–Ω–æ–º: https://www.youtube.com/playlist?list=PLEi6YXJjTzwHIK_g0Zc2m4cs4OVbxLyXN, https://rutube.ru/channel/64712980/ \n"
        "\n–ü—Ä–∏–º–µ—Ä –≤–µ—Ä–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–π –í–ö–† (.docx): https://drive.google.com/file/d/1UVObCmf_YjNV5h06Pp7QGsTttSxrG3e5/view?usp=drive_link \n"
        "–î–æ–∫—É–º–µ–Ω—Ç —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ò–ì–£: https://docs.google.com/document/d/1u4fIvEEHkwORaAj1kNBk3aBlEca7_pJ7/edit?usp=drive_link&ouid=115137208764228085296&rtpof=true&sd=true"
    )



@router.message(Command("set_reviewer"))
async def set_reviewer(message: types.Message):
    parts = message.text.split()
    if len(parts) != 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /set_reviewer <—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–æ–¥>")
        return

    secret = parts[1]
    if secret == SECRET_CODE:
        user_id = message.from_user.id
        set_user_role(user_id, REVIEWER_ROLE)
        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ —Ä–æ–ª—å: reviewer")

        commands = get_available_commands(REVIEWER_ROLE)
        await message.answer(
            "–í—ã —É—Å–ø–µ—à–Ω–æ —Å—Ç–∞–ª–∏ –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—ë—Ä–æ–º!\n"
            "–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
            "\n".join(commands)
        )
    else:
        logger.warning(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª –Ω–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥")
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥.")


@router.message(Command("my_role"))
async def my_role(message: types.Message):
    user_id = message.from_user.id
    role = get_user_role(user_id, message.from_user.username)
    await message.answer(f"–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å: {role}")


@router.message(Command("help"))
async def help_command(message: types.Message):
    user_id = message.from_user.id
    role = get_user_role(user_id, message.from_user.username)
    commands = get_available_commands(role)
    await message.answer("–°–ø—Ä–∞–≤–∫–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º:\n" + "\n".join(commands))


@router.message(Command("info"))
async def info(message: types.Message):
    await message.answer(
        "üìù –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç (–í–ö–†, –∫—É—Ä—Å–æ–≤—ã—Ö, –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –ø—Ä–∞–∫—Ç–∏–∫–µ) "
        "–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ì–û–°–¢ 7.32-2017 –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ò—Ä–∫—É—Ç—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.\n\n"
        "üìå –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
        "- –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ —Ä–∞–±–æ—Ç –∏ –ø—Ä–∞–≤–∏–ª\n"
        "- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∞ .docx\n"
        "- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∞ LaTeX (.tex –∏ .sty)\n"
        "- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–æ–≤)\n"
        "- –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø—Ä–æ–≤–µ—Ä–∏–≤—à–∏—Ö —Å–≤–æ–∏ —Ä–∞–±–æ—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–æ–≤)\n"
        "\n"
        "üìå LaTeX —Ä–∞–±–æ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω—ã –ø–æ —à–∞–±–ª–æ–Ω—É –¥–ª—è —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –ò–ì–£: https://github.com/Alyona1619/LaTeXTemplate \n"
        "–í–∏–¥–µ–æ-–≥–∞–π–¥ –ø–æ —Ä–∞–±–æ—Ç–µ —Å —à–∞–±–ª–æ–Ω–æ–º: https://www.youtube.com/playlist?list=PLEi6YXJjTzwHIK_g0Zc2m4cs4OVbxLyXN, https://rutube.ru/channel/64712980/ \n"
        "–ü—Ä–∏–º–µ—Ä –≤–µ—Ä–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–π –í–ö–† (.docx): https://drive.google.com/file/d/1UVObCmf_YjNV5h06Pp7QGsTttSxrG3e5/view?usp=drive_link \n"
        "–î–æ–∫—É–º–µ–Ω—Ç —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ò–ì–£: https://docs.google.com/document/d/1u4fIvEEHkwORaAj1kNBk3aBlEca7_pJ7/edit?usp=drive_link&ouid=115137208764228085296&rtpof=true&sd=true"
        "\n"
        "üìå –í LaTeX —Ä–∞–±–æ—Ç–∞—Ö –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è:\n"
        "- —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç—ã (–≥–ª–∞–≤—ã –∏ —Ä–∞–∑–¥–µ–ª—ã)\n"
        "- –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤–æ –≤–≤–µ–¥–µ–Ω–∏–∏, –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö –∂–∏—Ä–Ω—ã–º\n"
        "- –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∂–∏—Ä–Ω–æ—Å—Ç–∏, –∫—É—Ä—Å–∏–≤–∞, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ —Ä–∞–±–æ—Ç—ã\n"
        "- –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ (–∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –≤ –≤–≤–æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –∏ —ç–ª–µ–º–µ–Ω—Ç–∞—Ö, —Å—Ç—Ä–æ—á–Ω—ã–µ/–∑–∞–≥–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤)\n"
        "- –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä—ã –æ–±—ä–µ–∫—Ç-—Å—Å—ã–ª–∫–∞ —É —Ä–∏—Å—É–Ω–∫–æ–≤, —Ç–∞–±–ª–∏—Ü, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–ø–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n"
        "- —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Å—Å—ã–ª–∫–∏ –¥–æ —Ä–∏—Å—É–Ω–∫–∞/—Ç–∞–±–ª–∏—Ü—ã\n"
        "- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫\n"
        "- –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å .sty —Ñ–∞–π–ª–∞ (—Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞, –º–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –æ—Ç—Å—Ç—É–ø—ã, —Ñ–æ—Ä–º–∞—Ç –ø–æ–¥–ø–∏—Å–µ–π –∏ –¥—Ä—É–≥–æ–µ)\n"
        "\n"
        "üìå –í docx —Ä–∞–±–æ—Ç–∞—Ö –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è:\n"
        "- —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç—ã (–≥–ª–∞–≤—ã –∏ —Ä–∞–∑–¥–µ–ª—ã '–í—ã–≤–æ–¥—ã –ø–æ –≥–ª–∞–≤–µ')\n"
        "- —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞\n"
        "- –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤–æ –≤–≤–µ–¥–µ–Ω–∏–∏ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ –∂–∏—Ä–Ω—ã–º\n"
        "- —Ä–∏—Å—É–Ω–∫–∏, —Ç–∞–±–ª–∏—Ü—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑. –∏—Å—Ç–æ—á–Ω. (–Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä—ã –æ–±—ä–µ–∫—Ç-—Å—Å—ã–ª–∫–∞)\n"
        "\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    )


@router.message(Command("reset_role"))
async def reset_role(message: types.Message):
    user_id = message.from_user.id
    set_user_role(user_id, STUDENT_ROLE)
    logger.info(f"üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} —Å–±—Ä–æ—à–µ–Ω–∞ —Ä–æ–ª—å –¥–æ student.")
    await message.answer("–í–∞—à–∞ —Ä–æ–ª—å —Å–±—Ä–æ—à–µ–Ω–∞ –¥–æ 'student'. –í—ã –±–æ–ª—å—à–µ –Ω–µ –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä.")


@router.message(Command("feedback"))
async def feedback(message: types.Message):
    user_id = message.from_user.id
    text_parts = message.text.split(maxsplit=1)

    if len(text_parts) < 2:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: /feedback <—Ç–µ–∫—Å—Ç>")
        return

    feedback_text = text_parts[1]

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logger.feedback(f"‚úâÔ∏è –û—Ç–∑—ã–≤ –æ—Ç {user_id}: {feedback_text}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É
    try:
        await message.bot.send_message(
            ADMIN_USER_ID,
            f"üì© –û—Ç–∑—ã–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (@{message.from_user.username}):\n{feedback_text}"
        )
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}")

    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")


@router.message(Command("recent_checks"))
async def recent_checks(message: types.Message):
    user_id = message.from_user.id
    role = get_user_role(user_id)

    if role != REVIEWER_ROLE:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É recent_checks.")
        await message.answer("‚õîÔ∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—ë—Ä–∞–º.")
        return

    checks = get_recent_checks(14)
    if not checks:
        await message.answer("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 14 –¥–Ω–µ–π –Ω–µ –±—ã–ª–æ –ø—Ä–æ–≤–µ—Ä–æ–∫.")
        return

    text = "üìÑ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ 14 –¥–Ω–µ–π:</b>\n\n"
    current_type = None

    for username, doc_type, check_type, result, check_time in checks:
        if doc_type != current_type:
            current_type = doc_type
            text += f"\nüî∑ <u><b>–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞: {doc_type}</b></u>\n"

        readable_time = datetime.fromisoformat(str(check_time)).strftime("%d.%m.%Y %H:%M")
        if result == '0':
            result_str = "–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ ‚ùå"
        elif result == '1':
            result_str = "–û—à–∏–±–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ‚úÖ"
        else:
            result_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"

        text += (
            f"üë§ @{username or '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
            f"üïí –í—Ä–µ–º—è: {readable_time}\n"
            f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {check_type}\n"
            f"‚òëÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç: {result_str}\n\n"
        )

    await send_long_message(message, text)


def register(dp):
    dp.include_router(router)
