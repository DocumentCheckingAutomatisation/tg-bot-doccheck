from aiogram import Router, types
from aiogram.filters import Command
from db import get_user_role, set_user_role, REVIEWER_ROLE
from config import SECRET_CODE
from logger import logger

router = Router()

def get_available_commands(role: str) -> list[str]:
    commands = [
        "/types ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "/rules <—Ç–∏–ø_–¥–æ–∫—É–º–µ–Ω—Ç–∞> ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞",
        "/check_docx ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å .docx –¥–æ–∫—É–º–µ–Ω—Ç",
        "/check_latex ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å .tex –∏ .sty —Ñ–∞–π–ª—ã",
    ]

    if role == REVIEWER_ROLE:
        commands.append("/change_rule <—Ç–∏–ø> <–∫–ª—é—á> <–∑–Ω–∞—á–µ–Ω–∏–µ> ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ")
        commands.append("/change_rule_for_all <–∫–ª—é—á> <–∑–Ω–∞—á–µ–Ω–∏–µ> ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤")

    commands.append("/set_reviewer <—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–æ–¥> ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞")
    return commands

@router.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id
    role = get_user_role(user_id)
    logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª —Å–µ—Å—Å–∏—é –∫–∞–∫ {role}.")

    commands = get_available_commands(role)

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç! –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å: {role}.\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
        "\n".join(commands)
    )

@router.message(Command("set_reviewer"))
async def set_reviewer(message: types.Message):
    parts = message.text.split()
    if len(parts) != 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /set_reviewer <—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–æ–¥>")
        return

    secret = parts[1]
    if secret == SECRET_CODE:
        user_id = message.from_user.id
        set_user_role(user_id, REVIEWER_ROLE)
        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ —Ä–æ–ª—å: reviewer")

        commands = get_available_commands(REVIEWER_ROLE)
        await message.answer(
            "–í—ã —É—Å–ø–µ—à–Ω–æ —Å—Ç–∞–ª–∏ –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—ë—Ä–æ–º!\n"
            "–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
            "\n".join(commands)
        )
    else:
        logger.warning(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª –Ω–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥")
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥.")

def register(dp):
    dp.include_router(router)

